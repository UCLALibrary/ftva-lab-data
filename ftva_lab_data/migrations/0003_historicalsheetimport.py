# Generated by Django 5.2.1 on 2025-05-30 23:13

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ftva_lab_data', '0002_sheetimport_assigned_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSheetImport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('hard_drive_name', models.CharField(blank=True, max_length=100)),
                ('dml_lto_tape_id', models.CharField(blank=True, max_length=100)),
                ('arsc_lto_tape_id', models.CharField(blank=True, max_length=100)),
                ('hard_drive_barcode_id', models.CharField(blank=True, max_length=100)),
                ('file_folder_name', models.CharField(blank=True, max_length=200)),
                ('sub_folder_name', models.CharField(blank=True, max_length=200)),
                ('file_name', models.CharField(blank=True, max_length=200)),
                ('inventory_number', models.CharField(blank=True, max_length=100)),
                ('source_inventory_number', models.CharField(blank=True, max_length=50)),
                ('source_barcode', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(blank=True, max_length=250)),
                ('job_number', models.CharField(blank=True, max_length=25)),
                ('source_type', models.CharField(blank=True, max_length=25)),
                ('resolution', models.CharField(blank=True, max_length=25)),
                ('compression', models.CharField(blank=True, max_length=25)),
                ('file_format', models.CharField(blank=True, max_length=25)),
                ('file_size', models.CharField(blank=True, max_length=50)),
                ('frame_rate', models.CharField(blank=True, max_length=25)),
                ('total_running_time', models.CharField(blank=True, max_length=25)),
                ('source_frame_rate', models.CharField(blank=True, max_length=25)),
                ('aspect_ratio', models.CharField(blank=True, max_length=25)),
                ('color_bit_depth', models.CharField(blank=True, max_length=25)),
                ('color_type', models.CharField(blank=True, max_length=25)),
                ('frame_layout', models.CharField(blank=True, max_length=25)),
                ('sample_structure', models.CharField(blank=True, max_length=25)),
                ('sample_rate', models.CharField(blank=True, max_length=25)),
                ('capture_device_make_and_model', models.CharField(blank=True, max_length=50)),
                ('capture_device_settings', models.CharField(blank=True, max_length=50)),
                ('date_capture_completed', models.CharField(blank=True, max_length=50)),
                ('video_edit_software_and_settings', models.CharField(blank=True, max_length=50)),
                ('date_edit_completed', models.CharField(blank=True, max_length=50)),
                ('color_grading_software', models.CharField(blank=True, max_length=50)),
                ('color_grading_settings', models.CharField(blank=True, max_length=50)),
                ('audio_file_format', models.CharField(blank=True, max_length=50)),
                ('date_audio_edit_completed', models.CharField(blank=True, max_length=50)),
                ('remaster_platform', models.CharField(blank=True, max_length=50)),
                ('remaster_software', models.CharField(blank=True, max_length=50)),
                ('remaster_settings', models.CharField(blank=True, max_length=50)),
                ('date_remaster_completed', models.CharField(blank=True, max_length=50)),
                ('subtitles', models.CharField(blank=True, max_length=50)),
                ('watermark_type', models.CharField(blank=True, max_length=50)),
                ('security_data_encrypted', models.CharField(blank=True, max_length=50)),
                ('migration_or_preservation_record', models.CharField(blank=True, max_length=50)),
                ('hard_drive_location', models.CharField(blank=True, max_length=50)),
                ('date_job_started', models.CharField(blank=True, max_length=50)),
                ('date_job_completed', models.CharField(blank=True, max_length=50)),
                ('general_entry_cataloged_by', models.CharField(blank=True, max_length=50)),
                ('notes', models.CharField(blank=True, max_length=500)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sheet import',
                'verbose_name_plural': 'historical sheet imports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
